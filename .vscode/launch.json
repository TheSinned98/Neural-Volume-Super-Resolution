{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "queue job",
            "type": "python",
            "request": "launch",
            "program": "slurm/queue_job.py",
            "console": "integratedTerminal",
        },
        {
            "name": "perfomance table",
            "type": "python",
            "request": "launch",
            "program": "scripts/performance_table.py",
            "console": "integratedTerminal",
        },
        {
            "name": "convert filename",
            "type": "python",
            "request": "launch",
            "program": "scripts/convert_image_names.py",
            "console": "integratedTerminal",
        },
        {
            "name": "clean checkpoint",
            "type": "python",
            "request": "launch",
            "program": "scripts/clean_checkpoints.py",
            "console": "integratedTerminal",
        },
        {
            "name": "model comparison",
            "type": "python",
            "request": "launch",
            "program": "models_comparison.py",
            "console": "integratedTerminal",
        },
        // {
        //     "name": "end2end DTU train",
        //     "type": "python",
        //     "request": "launch",
        //     "program": "train_nerf.py",
        //     "console":"integratedTerminal",
        //     // "console": "integratedTerminal",
        //     // "justMyCode": false,
        //     "args":["--config","config/DTU_E2E.yml"]
        // },
        // {
        //     "name": "resume end2end DTU",
        //     "type": "python",
        //     "request": "launch",
        //     "program": "train_nerf.py",
        //     "console":"integratedTerminal",
        //     // "console": "integratedTerminal",
        //     // "justMyCode": false,
        //     "args":[
        //         "--config","config/DTU_E2E.yml",
        //         "--load-checkpoint","resume",
        //     ]
        // },
        {
            "name": "end2end synt train",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console":"integratedTerminal",
            // "console": "integratedTerminal",
            // "justMyCode": false,
            "args":["--config","config/planes_E2E.yml"]
        },
        {
            "name": "resume end2end synt",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console":"integratedTerminal",
            // "console": "integratedTerminal",
            // "justMyCode": false,
            "args":[
                "--config","config/planes_E2E.yml",
                "--load-checkpoint","resume",
            ]
        },
        {
            "name": "train planes model",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console":"integratedTerminal",
            // "console": "integratedTerminal",
            // "justMyCode": false,
            "args":["--config","config/planes.yml"]
        },
        // {
        //     "name": "train planes on DTU",
        //     "type": "python",
        //     "request": "launch",
        //     "program": "train_nerf.py",
        //     "console": "integratedTerminal",
        //     "justMyCode": true,
        //     "args":["--config","config/planes_DTU.yml"]
        // },
        // {
        //     "name": "resume planes DTU",
        //     "type": "python",
        //     "request": "launch",
        //     "program": "train_nerf.py",
        //     "console": "integratedTerminal",
        //     "justMyCode": true,
        //     "args":[
        //         "--config","config/planes_DTU.yml",
        //         "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
        //     ]
        // },
        {
            "name": "resume planes model",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/planes.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
            ]
        },
        {
            "name": "planes SR train",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/planes_SR.yml"
            ]
        },
        {
            "name": "planes SR resume",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/planes_SR.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
            ]
        },
        {
            "name": "planes SR EVAL",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/planes_SR.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
                "--eval","images", //"video", //"images",
                "--results_path","/tigress/yb6751/projects/NeuralMFSR/results"
            ]
        },
        {
            "name": "Synt planes only",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/Synt_planes_only.yml"
            ]
        },
        {
            "name": "Real planes only",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/Real_planes_only.yml"
            ]
        },
        {
            "name": "resume planes only synt",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/Synt_planes_only.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
            ]
        },
        // {
        //     "name": "train DTU SR",
        //     "type": "python",
        //     "request": "launch",
        //     "program": "train_nerf.py",
        //     "console": "integratedTerminal",
        //     "justMyCode": true,
        //     "args":[
        //         "--config","config/planes_SR_DTU.yml"
        //     ]
        // },
        // {
        //     "name": "resume DTU SR",
        //     "type": "python",
        //     "request": "launch",
        //     "program": "train_nerf.py",
        //     "console": "integratedTerminal",
        //     "justMyCode": true,
        //     "args":
        //     [
        //         "--config","config/planes_SR_DTU.yml",
        //         "--load-checkpoint","resume",
        //     ]
        // },
        {
            "name": "planes internal SR",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/planes_internal_SR.yml"
            ]
        },
        {
            "name": "end2end synt EVAL",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/planes_E2E.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
                "--eval","images", //"video", //"images",
                "--results_path","/tigress/yb6751/projects/NeuralMFSR/results"
            ]
        },
        {
            "name": "planes EVAL",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/planes.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
                "--eval","images", //"video", //"images",
                "--results_path","/tigress/yb6751/projects/NeuralMFSR/results"
            ]
        },
        {
            "name": "NeRF LR",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":["--config","config/NeRF_LR.yml"]
        },
        {
            "name": "resume NeRF LR",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/NeRF_LR.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
            ]
        },
        {
            "name": "NeRF LR EVAL",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/NeRF_LR.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
                "--eval","images", //"video", //"images",
                "--results_path","/tigress/yb6751/projects/NeuralMFSR/results"
            ]
        },
        {
            "name": "train NeRF",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":["--config","config/lego.yml"]
        },
        {
            "name": "train downsampled",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":["--config","config/lego_ds.yml"]
        },
        {
            "name": "end2end DTU train",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":["--config","config/DTU_E2E.yml"]
        },
        {
            "name": "end2end DTU resume",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/DTU_E2E.yml",
                "--load-checkpoint","resume",
            ]
        },
        {
            "name": "end2end DTU EVAL",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":[
                "--config","config/DTU_E2E.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
                "--eval","images", //"video", //"images",
                "--results_path","/tigress/yb6751/projects/NeuralMFSR/results"
            ]
        },
        {
            "name": "resume SR",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":
            [
                // "--config","config/lego_SR.yml",
                "--load-checkpoint","resume", //"/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_dirs_encoding_L4C256W0001_0"
                "--resume","/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/SR_spatial_model_0"
            ]
        },
        {
            "name": "resume train",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":
            [
                "--config","config/lego.yml",
                // "--load-checkpoint","/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/coarse_only/checkpoint05000.ckpt"
                "--load-checkpoint","/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/coarse_and_fine"
            ]
        },
        {
            "name": "resume downsampled",
            "type": "python",
            "request": "launch",
            "program": "train_nerf.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args":
            [
                "--config","config/lego_ds.yml",
                // "--load-checkpoint","/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/coarse_only/checkpoint05000.ckpt"
                "--load-checkpoint","/scratch/gpfs/yb6751/projects/VolumetricEnhance/logs/downsample"
            ]
        },
        {
            "name": "find resize offset",
            "type": "python",
            "request": "launch",
            "program": "scripts/find_resize_offset.py",
            "console": "integratedTerminal",
        },
        {
            "name": "convert DTU scene names",
            "type": "python",
            "request": "launch",
            "program": "scripts/convert_DTU_scene_names.py",
            "console": "integratedTerminal",
        },
   ]
}